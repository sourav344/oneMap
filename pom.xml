<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>automationPractise</groupId>
  <artifactId>Selenium.Java.TestNG.POM</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <selenium.java.version>4.16.0</selenium.java.version>
    <testng.version>7.9.0</testng.version>
    <jackson.version>2.16.z 1</jackson.version>
    <!-- plugins versions -->
    <maven.compiler.version>3.11.0</maven.compiler.version>
    <maven.dependency.version>3.6.0</maven.dependency.version>
    <maven.jar.version>3.3.0</maven.jar.version>
    <maven.surefire.version>3.1.2</maven.surefire.version>
    <maven.resources.plugin>3.3.1</maven.resources.plugin>
    <!-- output directory -->
    <package.directory>${project.build.directory}/docker-resources</package.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.java.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-devtools-v129 -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-devtools-v129</artifactId>
    <version>4.25.0</version>
</dependency>

    <dependency>
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-classic</artifactId>
    <version>1.4.7</version>
    <scope>test</scope>
</dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.8.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>31.0.1-jre</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.1.0</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>7.14.1</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-testng</artifactId>
      <version>7.14.1</version>
    </dependency>
  </dependencies>

  <!--  mvn test -P Regression  -->

  <build>
    <finalName>selenium-docker</finalName>
    <plugins>
      <!-- To compile the source code using specific java version. also to force IDE to change the settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
      <!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <systemPropertyVariables>
            <browser>chrome</browser>
          </systemPropertyVariables>
          <suiteXmlFiles>
            <file>ParallelTestBothWinandMobile.xml</file>
          </suiteXmlFiles>
          <threadCount>5</threadCount>
          <reportsDirectory>target/test-output</reportsDirectory>
        </configuration>
      </plugin>
      <!-- To copy all the dependencies to run our tests as part of "mvn package" -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.version}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${package.directory}/libs</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- To package our page objects, test classes into jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.version}</version>
        <configuration>
          <outputDirectory>${package.directory}/libs</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- To copy resources into the output directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.plugin}</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${package.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
